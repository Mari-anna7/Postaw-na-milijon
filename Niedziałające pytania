from tkinter import *
import tkinter as tk
from tkinter import messagebox
import random

menu = tk.Tk()
menu.title("Menu")
menu.geometry("1024x576")
grafika = PhotoImage(file="adam_menu.png")
grafika_tło = Label(menu, image=grafika)
grafika_tło.pack()

########### SŁOWNIK #########################################################################################################################
### ZBIORY PYTAN W SLOWNIKACH
## etap1 = pytania z 4 odpowiedziami, etap2 = pytania z 3 odpowiedziami, etap3 = pytania z 2 odpowiedziami
## w każdym etapie mamy numery pytań (jako hasła) oraz pytania z odpowiedziami (jako definicje)
## w liście poprawna odpowiedź znajduje sie zawsze na pozycji [1] (za pytaniem[0])

etap1 = {1: ["Ile jest części „Dziadów”?", "3", "2", "1", "4"],
         2: ["Który z tych twórców nie dostał Nobla?", "Białoszewski", "Szymborska", "Sienkiewicz", "Miłosz"],
         3: ["Która z części „Dziadów” jest pierwsza?", "II", "IV", "III", "I"],
         4: ["Kto jest autorem „Hymnu”?", "Słowacki", "Krasicki", "Mickiewicz", "Chopin"],
         5: ["Kto jest głównym bohaterem „Dziadów cz.III”?", "Konrad", "Kordian", "ksiądz Robak", "Konstanty"],
         6: ["Która z tych lektur nie jest obowiązkowa?", "Świtezianka", "Wesele", "Lalka", "Sklepy cynamonowe"],
         7: ["Ilu mamy polskich laureatów literackiej nagrody Nobla?", "5", "3", "4", "7"],
         8: ["Prekursorem jakiego skrótowca był Mickiewicz?", "YOLO", "xoxo", "lmao", "rolf"]}
etap2 = {1: ["Skąd pochodzi cytat: „Niech się dzieje wola nieba…”?", "Zemsta","Świętoszek", "Nie-boska Komedia"],
         2: ["Prawdziwe nazwisko Bolesława Prusa to:", "Aleksander Głowacki", "Przemysław Terlecki", "Zenon Jaworski"],
         3: ["Kto jest autorem „Trenów”?", "Kochanowski", "Słowacki", "Konopnicka"],
         4: ["Kto jest autorem „Sonetów Krymskich”?", "Mickiewicz", "Słowacki", "Wyspiański"],
         5: ["Z kim flirtował tytułowy Pan Tadeusz?", "Z obiema", "Z Telimeną", "Z Zosią"],
         6: ["Skąd pochodzi cytat: „Niech się dzieje wola nieba…”?", "Zemsta", "Świętoszek", "Nie-boska Komedia"]}
etap3 = {1: ["Nazwiskiem którego z poetów sygnowana jest jedna z czołowych polskich uczelni?", "Mickiewicza", "Słowackiego"],
         2: ["Jaki jest najlepszy nadmorski ptak?", "Jesiotr", "Gosia Andrzejwicz"],
         3: ["Co liże Luna?", "Ścianę", "Jesiotra"],
         4: ["Jak Ci poszło?", "M E G A", "Źle :((("]}

###KLASA KTÓRA ZAWIERA FUNKCJE DO PRZYCISKÓW NA ZAPADNIACH###
class Zapadnie():
    def __init__(self):
        global kasa_gracza
        global kasa_zapadnia1
        global kasa_zapadnia2
        global kasa_zapadnia3
        global kasa_zapadnia4
        kasa_gracza = 1000000
        kasa_zapadnia1 = 0
        kasa_zapadnia2 = 0
        kasa_zapadnia3 = 0
        kasa_zapadnia4 = 0

    def akcja_plusik1():
        global kasa_gracza
        global kasa_do_rozlozenia
        global kasa_zapadnia1
        global kasa_na_zapadni1
        if kasa_gracza>0:
            if kasa_zapadnia2==0 or kasa_zapadnia3==0 or kasa_zapadnia4==0:
                kasa_gracza-=25000
                kasa_do_rozlozenia.config(text = kasa_gracza)
                kasa_zapadnia1+=25000
                kasa_na_zapadni1.config(text = kasa_zapadnia1)

    def akcja_minusik1():
        global kasa_gracza
        global kasa_do_rozlozenia
        global kasa_zapadnia1
        global kasa_na_zapadni1
        if kasa_zapadnia1>0:
            kasa_gracza+=25000
            kasa_do_rozlozenia.config(text = kasa_gracza)
            kasa_zapadnia1-=25000
            kasa_na_zapadni1.config(text = kasa_zapadnia1)

    ##########################

    def akcja_plusik2():
        global kasa_gracza
        global kasa_do_rozlozenia
        global kasa_zapadnia2
        global kasa_na_zapadni2
        if kasa_gracza>0:
            if kasa_zapadnia1==0 or kasa_zapadnia3==0 or kasa_zapadnia4==0:
                kasa_gracza-=25000
                kasa_do_rozlozenia.config(text = kasa_gracza)
                kasa_zapadnia2+=25000
                kasa_na_zapadni2.config(text = kasa_zapadnia2)

    def akcja_minusik2():
        global kasa_gracza
        global kasa_do_rozlozenia
        global kasa_zapadnia2
        global kasa_na_zapadni2
        if kasa_zapadnia2>0:
            kasa_gracza+=25000
            kasa_do_rozlozenia.config(text = kasa_gracza)
            kasa_zapadnia2-=25000
            kasa_na_zapadni2.config(text = kasa_zapadnia2)

    ##########################

    def akcja_plusik3():
        global kasa_gracza
        global kasa_do_rozlozenia
        global kasa_zapadnia3
        global kasa_na_zapadni3
        if kasa_gracza>0:
            if kasa_zapadnia2==0 or kasa_zapadnia1==0 or kasa_zapadnia4==0:
                kasa_gracza-=25000
                kasa_do_rozlozenia.config(text = kasa_gracza)
                kasa_zapadnia3+=25000
                kasa_na_zapadni3.config(text = kasa_zapadnia3)

    def akcja_minusik3():
        global kasa_gracza
        global kasa_do_rozlozenia
        global kasa_zapadnia3
        global kasa_na_zapadni3
        if kasa_zapadnia3>0:
            kasa_gracza+=25000
            kasa_do_rozlozenia.config(text = kasa_gracza)
            kasa_zapadnia3-=25000
            kasa_na_zapadni3.config(text = kasa_zapadnia3)

    ############################

    def akcja_plusik4():
        global kasa_gracza
        global kasa_do_rozlozenia
        global kasa_zapadnia4
        global kasa_na_zapadni4
        if kasa_gracza>0:
            if kasa_zapadnia2==0 or kasa_zapadnia3==0 or kasa_zapadnia1==0:
                kasa_gracza-=25000
                kasa_do_rozlozenia.config(text = kasa_gracza)
                kasa_zapadnia4+=25000
                kasa_na_zapadni4.config(text = kasa_zapadnia4)

    def akcja_minusik4():
        global kasa_gracza
        global kasa_do_rozlozenia
        global kasa_zapadnia4
        global kasa_na_zapadni4
        if kasa_zapadnia4>0:
            kasa_gracza+=25000
            kasa_do_rozlozenia.config(text = kasa_gracza)
            kasa_zapadnia4-=25000
            kasa_na_zapadni4.config(text = kasa_zapadnia4)

#######KLASA KTÓRA TWORZY GŁÓWNE OKNO I PRZYCISKI W MENU################
class Menu(Zapadnie):
    def akcja_start():
        glowne_okno = tk.Tk()
        glowne_okno.title("Postaw na milijon")
        glowne_okno.geometry("1024x576")
        menu.destroy()

        zapadnia1 = tk.Label(glowne_okno, bg= "gray", bd=10)
        zapadnia1.place(relx=0.20, rely=0.25, relwidth=0.15, relheight=0.35, anchor='n')

        button1 = tk.Button(zapadnia1, text = "+", font=50, command = Zapadnie.akcja_plusik1)
        button1.place(relx=0.35, rely=0.7, relwidth=0.3, relheight=0.2, anchor='n')
        button2 = tk.Button(zapadnia1, text = "-", font=50, command = Zapadnie.akcja_minusik1)
        button2.place(relx=0.65, rely=0.7, relwidth=0.3, relheight=0.2, anchor='n')

        odpowiedz1 = tk.Label(zapadnia1, text = "A", font=50, bg= "white")
        odpowiedz1.place(relx=0.5, rely=0, relwidth=0.8, relheight=0.3, anchor='n')

        global kasa_na_zapadni1
        kasa_na_zapadni1 = tk.Label(zapadnia1, text = kasa_zapadnia1, font=50, bg= "gray")
        kasa_na_zapadni1.place(relx=0.5, rely=0.4, relwidth=0.6, relheight=0.15, anchor='n')

        ##########################

        zapadnia2 = tk.Label(glowne_okno, bg= "gray", bd=10)
        zapadnia2.place(relx=0.40, rely=0.25, relwidth=0.15, relheight=0.35, anchor='n')

        button3 = tk.Button(zapadnia2, text = "+", font=50, command = Zapadnie.akcja_plusik2)
        button3.place(relx=0.35, rely=0.7, relwidth=0.3, relheight=0.2, anchor='n')
        button4 = tk.Button(zapadnia2, text = "-", font=50, command = Zapadnie.akcja_minusik2)
        button4.place(relx=0.65, rely=0.7, relwidth=0.3, relheight=0.2, anchor='n')

        odpowiedz2 = tk.Label(zapadnia2, text = "B", font=50,  bg= "white")
        odpowiedz2.place(relx=0.5, rely=0, relwidth=0.8, relheight=0.3, anchor='n')

        global kasa_na_zapadni2
        kasa_na_zapadni2 = tk.Label(zapadnia2, text = kasa_zapadnia1, font=50, bg= "gray")
        kasa_na_zapadni2.place(relx=0.5, rely=0.4, relwidth=0.6, relheight=0.15, anchor='n')

        ##########################

        zapadnia3 = tk.Label(glowne_okno, bg= "gray", bd=10)
        zapadnia3.place(relx=0.60, rely=0.25, relwidth=0.15, relheight=0.35, anchor='n')

        button5 = tk.Button(zapadnia3, text = "+", font=50, command = Zapadnie.akcja_plusik3)
        button5.place(relx=0.35, rely=0.7, relwidth=0.3, relheight=0.2, anchor='n')
        button6 = tk.Button(zapadnia3, text = "-", font=50, command = Zapadnie.akcja_minusik3)
        button6.place(relx=0.65, rely=0.7, relwidth=0.3, relheight=0.2, anchor='n')

        odpowiedz3 = tk.Label(zapadnia3, text = "C", font=50,  bg= "white")
        odpowiedz3.place(relx=0.5, rely=0, relwidth=0.8, relheight=0.3, anchor='n')

        global kasa_na_zapadni3
        kasa_na_zapadni3 = tk.Label(zapadnia3, text = kasa_zapadnia1, font=50, bg= "gray")
        kasa_na_zapadni3.place(relx=0.5, rely=0.4, relwidth=0.6, relheight=0.15, anchor='n')

        ##########################

        zapadnia4 = tk.Label(glowne_okno, bg= "gray", bd=10)
        zapadnia4.place(relx=0.80, rely=0.25, relwidth=0.15, relheight=0.35, anchor='n')

        button7 = tk.Button(zapadnia4, text = "+", font=50, command = Zapadnie.akcja_plusik4)
        button7.place(relx=0.35, rely=0.7, relwidth=0.3, relheight=0.2, anchor='n')
        button8 = tk.Button(zapadnia4, text = "-", font=50, command = Zapadnie.akcja_minusik4)
        button8.place(relx=0.65, rely=0.7, relwidth=0.3, relheight=0.2, anchor='n')

        odpowiedz4 = tk.Label(zapadnia4, text = "D", font=50, bg= "white")
        odpowiedz4.place(relx=0.5, rely=0, relwidth=0.8, relheight=0.3, anchor='n')

        global kasa_na_zapadni4
        kasa_na_zapadni4 = tk.Label(zapadnia4, text = kasa_zapadnia1, font=50, bg= "gray")
        kasa_na_zapadni4.place(relx=0.5, rely=0.4, relwidth=0.6, relheight=0.15, anchor='n')

        ##############################
        global kasa_do_rozlozenia
        kasa_do_rozlozenia = tk.Label(glowne_okno, text = kasa_gracza, font=100)
        kasa_do_rozlozenia.place(relx=0.5, rely=0.7, relwidth=0.3, relheight=0.2, anchor='n')

        ##############################
        class Timer(tk.Tk):
            def __init__(self, master=None):
                tk.Frame.__init__(self, master)
                self.label = tk.Label(glowne_okno, text = "", font = ("Comic Sans", 30), fg = "blue")
                self.label.place(relx=0, rely=0)
                self.remaining = 0
                self.odliczanie(60)

            def odliczanie(self, remaining = None):
                if remaining is not None:
                    self.remaining = remaining
                if self.remaining <= 0:
                    self.label.configure(text = "Czas upłynął!")
                else:
                    self.label.configure(text = "%d" % self.remaining)
                    self.remaining = self.remaining - 1
                    self.after(1000, self.odliczanie)

        czas_tytul = Label(glowne_okno)
        czas_tytul.place(x= 0.8, y= 0.5)
        stoper = Timer(master=glowne_okno)

        ###########################
        class Pozycja():
            ###### DRUKOWANIE PYTAN ########
            global glowne_okno
            pytanie = Label(glowne_okno, text = "PYTANIE:" , font = 50)
            pytanie.place(relx=0.50, rely=0)

            def pozycjowanie_4(pytanie_4, odp_1, odp_2, odp_3, odp_4):
                pytanie_4 = "".join(wylosowane_4[0])
                odp_1 = "".join(wylosowane_4[1])
                odp_2 = "".join(wylosowane_4[2])
                odp_3 = "".join(wylosowane_4[3])
                odp_4 = "".join(wylosowane_4[4])
                wydrukowane_pytanie_4 = tk.Label(glowne_okno, text = pytanie_4 + "\n" + "A: " + odp_1 + "\n" +"B: " + odp_2 + "\n" +"C: " + odp_3 + "\n" + "D: " + odp_4, font=50)
                wydrukowane_pytanie_4.place(relx=0.5, rely=0.1, anchor='n')

            def pozycjowanie_3(pytanie_3, odp_1, odp_2, odp_3):
                pytanie_3 = "".join(wylosowane_3[0])
                odp_1 = "".join(wylosowane_3[1])
                odp_2 = "".join(wylosowane_3[2])
                odp_3 = "".join(wylosowane_3[3])
                wydrukowane_pytanie_3 = tk.Label(glowne_okno, text = pytanie_3 + "\n" + "A: " + odp_1 + "\n" +"B: " + odp_2 + "\n" +"C: " + odp_3, font=50)
                wydrukowane_pytanie_3.place(relx=0.5, rely=0.1, anchor='n')

            def pozycjowanie_2(pytanie_1, odp_1, odp_2):
                pytanie_1 = "".join(wylosowane_2[0])
                odp_1 = "".join(wylosowane_2[1])
                odp_2 = "".join(wylosowane_2[2])
                wydrukowane_pytanie_2 = tk.Label(glowne_okno, text = pytanie_1 + "\n" + "A: " + odp_1 + "\n" +"B: " + odp_2, font=50)
                wydrukowane_pytanie_2.place(relx=0.5, rely=0.1, anchor='n')

    ###########################

    def akcja_zasady():
        messagebox.showinfo("Zasady gry", "ZASADY GRY:\nczeka Cię 8 pytań,\nza każdym razem musisz rozłożyć wszystkie pieniądze,\njedna zapadnia musi pozostać pusta")

    def akcja_autorki():
        messagebox.showinfo("Autorki", "Autorki: Marianna Sikorska, Julia Moryson, Beata Nowak")

class Losowanie():
    ############################
    ### LOSOWANIE
    ## losowanie pytania z 4 odpowiedziami
    def losowanie_numeru_pytania_4(self, liczba_pytan_4):
        wylosowane_pytanie = random.randint(1, len(liczba_pytan_4))
        lista_z_pytaniem = liczba_pytan_4[wylosowane_pytanie]
        return lista_z_pytaniem

    ## losowanie pytania z 3 odpowiedziami
    def losowanie_numeru_pytania_3(self, liczba_pytan_3):
        wylosowane_pytanie = random.randint(1, len(liczba_pytan_3))
        lista_z_pytaniem = liczba_pytan_3[wylosowane_pytanie]
        return lista_z_pytaniem

    ## losowanie pytania z dwoma odpowiedziami
    def losowanie_numeru_pytania_2(self, liczba_pytan_2):
        wylosowane_pytanie = random.randint(1, len(liczba_pytan_2))
        lista_z_pytaniem = liczba_pytan_2[wylosowane_pytanie]
        return lista_z_pytaniem

class Gra(Losowanie, Menu):
    def etapowanie1(self):
        global wylosowane_4
        jesiotr = Losowanie()
        wylosowane_4 = jesiotr.losowanie_numeru_pytania_4(etap1)


        pozycja_losowa_4 = random.randint(1, 4)
        print(pozycja_losowa_4)
        global pozycjowanie_4
        if pozycja_losowa_4 == 1:
            pozycjowanie_4(wylosowane_4[0], wylosowane_4[1], wylosowane_4[2], wylosowane_4[3], wylosowane_4[4])
        elif pozycja_losowa_4 == 2:
            pozycjowanie_4(wylosowane_4[0], wylosowane_4[2], wylosowane_4[1], wylosowane_4[4], wylosowane_4[3])
        elif pozycja_losowa_4 == 3:
            pozycjowanie_4(wylosowane_4[0], wylosowane_4[3], wylosowane_4[4], wylosowane_4[1], wylosowane_4[2])
        elif pozycja_losowa_4 == 4:
            pozycjowanie_4(wylosowane_4[0], wylosowane_4[3], wylosowane_4[4], wylosowane_4[2], wylosowane_4[1])

    def etapowanie2(self):
        global wylosowane_3
        wylosowane_3 = jesiotr.losowanie_numeru_pytania_3(etap2)
        pozycja_losowa_3 = random.randint(1, 3)
        print(pozycja_losowa_3)

        if pozycja_losowa_3 == 1:
            pozycjowanie_3(wylosowane_3[0], wylosowane_3[1], wylosowane_3[2], wylosowane_3[3])
        elif pozycja_losowa_3 == 2:
            pozycjowanie_3(wylosowane_3[0], wylosowane_3[2], wylosowane_3[1], wylosowane_3[3])
        elif pozycja_losowa_3 == 3:
            pozycjowanie_3(wylosowane_3[0], wylosowane_3[3], wylosowane_3[2], wylosowane_3[1])

    def etapowanie3(self):
        global wylosowane_2
        wylosowane_2 = jesiotr.losowanie_numeru_pytania_2(etap3)
        pozycja_losowa_2 = random.randint(1, 2)
        print(pozycja_losowa_2)

        if pozycja_losowa_2 == 1:
            pozycjowanie_2(wylosowane_2[0], wylosowane_2[1], wylosowane_2[2])
        elif pozycja_losowa_2 == 2:
            pozycjowanie_2(wylosowane_2[0], wylosowane_2[2], wylosowane_2[1])

#######################################3

bababebe = Gra()
for i in range(4):
    bababebe.etapowanie1()
for i in range(3):
    if kasa_gracza == 0:
        break
    else:
        bababebe.etapowanie2()
for i in range(1):
    if kasa_gracza == 0:
        break
    else:
        bababebe.etapowanie3()


# def gra():
#     for i in range(4):
#         if kasa_gracza == 0:
#             break
#         kasa_zapadnia1 = 0
#         kasa_zapadnia2 = 0
#         kasa_zapadnia3 = 0
#         kasa_zapadnia4 = 0
#         kasa_gracza = kasa_zapadnia1
#     for i in range(3):
#         if kasa_gracza == 0:
#             break
#         kasa_zapadnia1 = 0
#         kasa_zapadnia2 = 0
#         kasa_zapadnia3 = 0
#         kasa_gracza = kasa_zapadnia1
#     if kasa_gracza == 0:
#         kasa_zapadnia1 = 0
#         kasa_zapadnia2 = 0
#         kasa_gracza = kasa_zapadnia1
#     if kasa_gracza > 0:
#         print("Gratuluję wygrałeś")


####### PRZYCISKI MENU ######################################################################################################################

start_przycisk = Menu()
start_przycisk = tk.Button(menu, text = "START", font=50, command = Menu.akcja_start)
start_przycisk.place(relx=0.6, rely=0.3, relwidth=0.2, relheight=0.1, anchor='n')

zasady_przycisk = Menu()
zasady_przycisk = tk.Button(menu, text = "ZASADY GRY", font=50, command = Menu.akcja_zasady)
zasady_przycisk.place(relx=0.6, rely=0.45, relwidth=0.2, relheight=0.1, anchor='n')

autorki_przycisk = Menu()
autorki_przycisk = tk.Button(menu, text = "O AUTORKACH", font=50, command = Menu.akcja_autorki)
autorki_przycisk.place(relx=0.6, rely=0.6, relwidth=0.2, relheight=0.1, anchor='n')

wyjscie_przycisk = Menu()
wyjscie_przycisk = tk.Button(menu, text = "WYJŚCIE", font=50, command = menu.destroy)
wyjscie_przycisk.place(relx=0.6, rely=0.75, relwidth=0.2, relheight=0.1, anchor='n')

##############################################################################################################################################

menu.mainloop()
#glowne_okno.mainloop()
